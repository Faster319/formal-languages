PARSER_BEGIN(Assignment)

public class Assignment {
    public static void main(String[] args) throws ParseException, TokenMgrError {
        Assignment parser = new Assignment(System.in);
        parser.Def();
    }
}

PARSER_END(Assignment)

SKIP:  {
"\t"
}

TOKEN: {
<SPACE: " ">            |
<ADD: "+">              |
<MULT: "*">             |
<DEF: "DEF">            |
<MAIN: "MAIN">          |
<LBRACE: "{">           |
<RBRACE: "}">           |
<SEMICOLON: ";">        |
<NUMBER: (["0"-"9"])+>  |
<FUNCT: (["A"-"Z"])+>   |
<PARAM: (["a"-"z"])+>   |
<LINE: ("\r\n" | "\n\r" | "\r" | "\n")>
}

int Def() throws NumberFormatException:
{
    Token t;
    int i;
    int value;

}
{
    <DEF>
    <SPACE>
    <FUNCT>
    <SPACE>
    <PARAM>
    <SPACE>
    <LBRACE>
    <SPACE>
    (
        <PARAM> |
        <NUMBER> |
        <ADD> |
        <MULT>
    )*
    <SPACE>
    <RBRACE>
    <SPACE>
    <SEMICOLON>
    <LINE>
}

int Primary() throws NumberFormatException:
{
    Token t;
}
{
    t = <NUMBER>
    {return Integer.parseInt(t.image);}
}

int Term() throws NumberFormatException:
{
    int i;
    int value;
}
{
    value = Primary()
    (
        <MULT>
        i = Primary()
        {value *= i;}
    )*
    {return value;}
}

int Expression() throws NumberFormatException:
{
    int i;
    int value;
}
{
    value = Term()
    (
        <ADD>
        i = Term()
        {value += i;}
    )*
    {return value;}
}
